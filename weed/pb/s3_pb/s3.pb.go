// Code generated by protoc-gen-go. DO NOT EDIT.
// source: s3.proto

package s3_pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type S3ConfigureRequest struct {
	S3ConfigurationFileContent []byte   `protobuf:"bytes,1,opt,name=s3_configuration_file_content,json=s3ConfigurationFileContent,proto3" json:"s3_configuration_file_content,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *S3ConfigureRequest) Reset()         { *m = S3ConfigureRequest{} }
func (m *S3ConfigureRequest) String() string { return proto.CompactTextString(m) }
func (*S3ConfigureRequest) ProtoMessage()    {}
func (*S3ConfigureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_005e34be4304e022, []int{0}
}

func (m *S3ConfigureRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S3ConfigureRequest.Unmarshal(m, b)
}
func (m *S3ConfigureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S3ConfigureRequest.Marshal(b, m, deterministic)
}
func (m *S3ConfigureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S3ConfigureRequest.Merge(m, src)
}
func (m *S3ConfigureRequest) XXX_Size() int {
	return xxx_messageInfo_S3ConfigureRequest.Size(m)
}
func (m *S3ConfigureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_S3ConfigureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_S3ConfigureRequest proto.InternalMessageInfo

func (m *S3ConfigureRequest) GetS3ConfigurationFileContent() []byte {
	if m != nil {
		return m.S3ConfigurationFileContent
	}
	return nil
}

type S3ConfigureResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S3ConfigureResponse) Reset()         { *m = S3ConfigureResponse{} }
func (m *S3ConfigureResponse) String() string { return proto.CompactTextString(m) }
func (*S3ConfigureResponse) ProtoMessage()    {}
func (*S3ConfigureResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_005e34be4304e022, []int{1}
}

func (m *S3ConfigureResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S3ConfigureResponse.Unmarshal(m, b)
}
func (m *S3ConfigureResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S3ConfigureResponse.Marshal(b, m, deterministic)
}
func (m *S3ConfigureResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S3ConfigureResponse.Merge(m, src)
}
func (m *S3ConfigureResponse) XXX_Size() int {
	return xxx_messageInfo_S3ConfigureResponse.Size(m)
}
func (m *S3ConfigureResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_S3ConfigureResponse.DiscardUnknown(m)
}

var xxx_messageInfo_S3ConfigureResponse proto.InternalMessageInfo

type S3CircuitBreakerConfig struct {
	Global               *S3CircuitBreakerOptions            `protobuf:"bytes,1,opt,name=global,proto3" json:"global,omitempty"`
	Buckets              map[string]*S3CircuitBreakerOptions `protobuf:"bytes,2,rep,name=buckets,proto3" json:"buckets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *S3CircuitBreakerConfig) Reset()         { *m = S3CircuitBreakerConfig{} }
func (m *S3CircuitBreakerConfig) String() string { return proto.CompactTextString(m) }
func (*S3CircuitBreakerConfig) ProtoMessage()    {}
func (*S3CircuitBreakerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_005e34be4304e022, []int{2}
}

func (m *S3CircuitBreakerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S3CircuitBreakerConfig.Unmarshal(m, b)
}
func (m *S3CircuitBreakerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S3CircuitBreakerConfig.Marshal(b, m, deterministic)
}
func (m *S3CircuitBreakerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S3CircuitBreakerConfig.Merge(m, src)
}
func (m *S3CircuitBreakerConfig) XXX_Size() int {
	return xxx_messageInfo_S3CircuitBreakerConfig.Size(m)
}
func (m *S3CircuitBreakerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_S3CircuitBreakerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_S3CircuitBreakerConfig proto.InternalMessageInfo

func (m *S3CircuitBreakerConfig) GetGlobal() *S3CircuitBreakerOptions {
	if m != nil {
		return m.Global
	}
	return nil
}

func (m *S3CircuitBreakerConfig) GetBuckets() map[string]*S3CircuitBreakerOptions {
	if m != nil {
		return m.Buckets
	}
	return nil
}

type S3CircuitBreakerOptions struct {
	Enabled              bool             `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Actions              map[string]int64 `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S3CircuitBreakerOptions) Reset()         { *m = S3CircuitBreakerOptions{} }
func (m *S3CircuitBreakerOptions) String() string { return proto.CompactTextString(m) }
func (*S3CircuitBreakerOptions) ProtoMessage()    {}
func (*S3CircuitBreakerOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_005e34be4304e022, []int{3}
}

func (m *S3CircuitBreakerOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S3CircuitBreakerOptions.Unmarshal(m, b)
}
func (m *S3CircuitBreakerOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S3CircuitBreakerOptions.Marshal(b, m, deterministic)
}
func (m *S3CircuitBreakerOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S3CircuitBreakerOptions.Merge(m, src)
}
func (m *S3CircuitBreakerOptions) XXX_Size() int {
	return xxx_messageInfo_S3CircuitBreakerOptions.Size(m)
}
func (m *S3CircuitBreakerOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_S3CircuitBreakerOptions.DiscardUnknown(m)
}

var xxx_messageInfo_S3CircuitBreakerOptions proto.InternalMessageInfo

func (m *S3CircuitBreakerOptions) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *S3CircuitBreakerOptions) GetActions() map[string]int64 {
	if m != nil {
		return m.Actions
	}
	return nil
}

func init() {
	proto.RegisterType((*S3ConfigureRequest)(nil), "messaging_pb.S3ConfigureRequest")
	proto.RegisterType((*S3ConfigureResponse)(nil), "messaging_pb.S3ConfigureResponse")
	proto.RegisterType((*S3CircuitBreakerConfig)(nil), "messaging_pb.S3CircuitBreakerConfig")
	proto.RegisterMapType((map[string]*S3CircuitBreakerOptions)(nil), "messaging_pb.S3CircuitBreakerConfig.BucketsEntry")
	proto.RegisterType((*S3CircuitBreakerOptions)(nil), "messaging_pb.S3CircuitBreakerOptions")
	proto.RegisterMapType((map[string]int64)(nil), "messaging_pb.S3CircuitBreakerOptions.ActionsEntry")
}

func init() {
	proto.RegisterFile("s3.proto", fileDescriptor_005e34be4304e022)
}

var fileDescriptor_005e34be4304e022 = []byte{
	// 388 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xcd, 0xca, 0xd3, 0x40,
	0x14, 0x35, 0x29, 0x7e, 0x69, 0x6f, 0xb3, 0x28, 0xe3, 0x5f, 0x08, 0x08, 0x35, 0x20, 0x74, 0x21,
	0x29, 0x66, 0x36, 0x52, 0x71, 0xd1, 0x14, 0x05, 0x51, 0x50, 0x92, 0x85, 0xe0, 0x26, 0xcc, 0xa4,
	0xb7, 0x71, 0x68, 0x3a, 0x89, 0x99, 0x89, 0xd2, 0x27, 0xf0, 0xa9, 0x7c, 0x37, 0xc9, 0x4f, 0x4b,
	0xac, 0x5a, 0xfc, 0x56, 0x99, 0xcc, 0x3d, 0xe7, 0x9e, 0x73, 0x98, 0x03, 0x63, 0x45, 0xfd, 0xb2,
	0x2a, 0x74, 0x41, 0xec, 0x03, 0x2a, 0xc5, 0x32, 0x21, 0xb3, 0xa4, 0xe4, 0xde, 0x27, 0x20, 0x31,
	0xdd, 0x14, 0x72, 0x27, 0xb2, 0xba, 0xc2, 0x08, 0xbf, 0xd6, 0xa8, 0x34, 0x59, 0xc3, 0x63, 0x45,
	0x93, 0xb4, 0xbf, 0x66, 0x5a, 0x14, 0x32, 0xd9, 0x89, 0x1c, 0x9b, 0x2b, 0x8d, 0x52, 0x3b, 0xc6,
	0xdc, 0x58, 0xd8, 0x91, 0xab, 0xce, 0xd4, 0x16, 0xf3, 0x46, 0xe4, 0xb8, 0xe9, 0x10, 0xde, 0x03,
	0xb8, 0xf7, 0xdb, 0x62, 0x55, 0x16, 0x52, 0xa1, 0xf7, 0xc3, 0x84, 0x87, 0x31, 0xdd, 0x88, 0x2a,
	0xad, 0x85, 0x0e, 0x2b, 0x64, 0x7b, 0xac, 0x3a, 0x14, 0x79, 0x05, 0x37, 0x59, 0x5e, 0x70, 0x96,
	0xb7, 0xdb, 0xa7, 0xc1, 0x53, 0x7f, 0xe8, 0xd4, 0xbf, 0x64, 0x7d, 0x28, 0x1b, 0x49, 0x15, 0xf5,
	0x24, 0xf2, 0x0e, 0x2c, 0x5e, 0xa7, 0x7b, 0xd4, 0xca, 0x31, 0xe7, 0xa3, 0xc5, 0x34, 0x78, 0x7e,
	0x9d, 0xdf, 0xa9, 0xfa, 0x61, 0xc7, 0x79, 0x2d, 0x75, 0x75, 0x8c, 0x4e, 0x1b, 0x5c, 0x06, 0xf6,
	0x70, 0x40, 0x66, 0x30, 0xda, 0xe3, 0xb1, 0x35, 0x36, 0x89, 0x9a, 0x23, 0x79, 0x09, 0x77, 0xbf,
	0xb1, 0xbc, 0x46, 0xc7, 0xbc, 0x8d, 0xd9, 0x8e, 0xb3, 0x32, 0x5f, 0x18, 0xde, 0x4f, 0x03, 0x1e,
	0xfd, 0x03, 0x46, 0x1c, 0xb0, 0x50, 0x32, 0x9e, 0xe3, 0xb6, 0x95, 0x1c, 0x47, 0xa7, 0x5f, 0xf2,
	0x1e, 0x2c, 0x96, 0xb6, 0xa0, 0x3e, 0x65, 0xf0, 0x5f, 0xc2, 0xfe, 0xba, 0x23, 0xf5, 0x31, 0xfb,
	0x15, 0xee, 0x0a, 0xec, 0xe1, 0xe0, 0x2f, 0x31, 0xef, 0x0f, 0x63, 0x8e, 0x06, 0xfe, 0x83, 0x04,
	0x26, 0x31, 0xb2, 0xef, 0x88, 0xdb, 0x98, 0x92, 0x08, 0x26, 0xe7, 0xb7, 0x26, 0xf3, 0x3f, 0x2c,
	0x5d, 0xf4, 0xcb, 0x7d, 0x72, 0x05, 0xd1, 0x17, 0xe5, 0x4e, 0xf8, 0x16, 0x66, 0xaa, 0x13, 0xd8,
	0x29, 0x3f, 0xcd, 0x05, 0x4a, 0x1d, 0x5a, 0x31, 0xfd, 0xd8, 0xb4, 0xf8, 0xf3, 0xb3, 0x4c, 0xe8,
	0x2f, 0x35, 0xf7, 0xd3, 0xe2, 0xb0, 0x3c, 0xa3, 0x06, 0xa7, 0xe6, 0xb3, 0x2c, 0xf9, 0x52, 0xd1,
	0xa4, 0xe4, 0xfc, 0xa6, 0xad, 0x3e, 0xfd, 0x15, 0x00, 0x00, 0xff, 0xff, 0x73, 0xb3, 0xe3, 0x5b,
	0x06, 0x03, 0x00, 0x00,
}
